/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.oscon2018.tutorials.api;

import com.oscon2018.tutorials.models.Error;
import com.oscon2018.tutorials.models.IndexerResponse;
import com.oscon2018.tutorials.models.QueryRequest;
import com.oscon2018.tutorials.models.QueryResponse;
import org.springframework.core.io.Resource;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "index", description = "the index API")
public interface IndexApi {

    @ApiOperation(value = "Index store data", nickname = "index", notes = "Index store data from CSV file posted", response = IndexerResponse.class, tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = IndexerResponse.class),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/index/{indexName}",
        produces = { "application/json" }, 
        consumes = { "multipart/form-data" },
        method = RequestMethod.PUT)
    ResponseEntity<IndexerResponse> index(@ApiParam(value = "index name",required=true) @PathVariable("indexName") String indexName,@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile csvPayload);


    @ApiOperation(value = "query stores", nickname = "queryStores", notes = "Query stores based on latitude/longitude and distance", response = QueryResponse.class, tags={ "query", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = QueryResponse.class),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 500, message = "Internal server error", response = Error.class) })
    @RequestMapping(value = "/index/{indexName}/query",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<QueryResponse> queryStores(@ApiParam(value = "index name",required=true) @PathVariable("indexName") String indexName,@ApiParam(value = "" ,required=true )  @Valid @RequestBody QueryRequest queryRequest);

}
