/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.oscon2018.tutorials.admin;

import com.oscon2018.tutorials.models.Index;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "admin", description = "the admin API")
public interface AdminApi {

    @ApiOperation(value = "Create a new index", nickname = "createIndex", notes = "create a new index for storing store documents", response = Index.class, tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Index created", response = Index.class),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 409, message = "An existing index already exists") })
    @RequestMapping(value = "/admin/indices/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Index> createIndex(@ApiParam(value = "New index to create"  )  @Valid @RequestBody Index newIndex);


    @ApiOperation(value = "Deletes an existing index", nickname = "deleteIndex", notes = "delete an existing index", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok"),
        @ApiResponse(code = 400, message = "Bad request") })
    @RequestMapping(value = "/admin/indices/{indexName}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteIndex(@ApiParam(value = "index name",required=true) @PathVariable("indexName") String indexName);

}
